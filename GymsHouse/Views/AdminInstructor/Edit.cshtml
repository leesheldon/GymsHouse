@model GymsHouse.Models.UserViewModels.InstructorViewModel

@{
    ViewData["Title"] = "Edit Instructor";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



<div class="container">
    <h2 class="text-primary">Edit Instructor</h2>
    <br />
    <hr />

    @using (Html.BeginForm(method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data", @class = "form-horizontal", @onsubmit = "return onValidation()" }))
    {
        @Html.ValidationSummary(true)
        @Html.TextBoxFor(m => m.Instructor.ID, htmlAttributes: new { @class = "form-control", @type = "hidden" })
        @Html.TextBoxFor(m => m.Instructor.ApplicationUserId, htmlAttributes: new { @class = "form-control", @type = "hidden" })
        <div class="form-group row">
            <label class="control-label col-sm-2" for="ApplicationUser.FirstName">First Name:</label>
            <div class="col-sm-8">
                @Html.TextBoxFor(m => m.ApplicationUser.FirstName, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(m => m.ApplicationUser.FirstName, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="control-label col-sm-2" for="Instructor.ApplicationUser.LastName">Last Name:</label>
            <div class="col-sm-8">
                @Html.TextBoxFor(m => m.ApplicationUser.LastName, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(m => m.ApplicationUser.LastName, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-sm-2" for="Instructor.Experiences">Experiences:</label>
            <div class="col-sm-10">
                @Html.TextAreaFor(m => m.Instructor.Experiences, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Instructor.Experiences, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="control-label col-sm-2" for="Instructor.History">History:</label>
            <div class="col-sm-10">
                @Html.TextAreaFor(m => m.Instructor.History, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Instructor.History, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="control-label col-sm-2" for="Instructor.Awards">Awards:</label>
            <div class="col-sm-10">
                @Html.TextAreaFor(m => m.Instructor.Awards, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Instructor.Awards, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="control-label col-sm-2" for="Instructor.IsActive">Is Active:</label>
            <div class="col-sm-10">
                @Html.CheckBoxFor(m => m.Instructor.IsActive, htmlAttributes: new { @class = "form-control", @style = "width: 20px; height: 20px;" })
                @Html.ValidationMessageFor(m => m.Instructor.IsActive, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-sm-2" for="Instructor.Picture_1">Picture 1:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Instructor.Picture_1, htmlAttributes: new { @class = "form-control", @type = "file", multiple = "multiple" })
                @Html.ValidationMessageFor(m => m.Instructor.Picture_1, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="control-label col-sm-2" for="Instructor.Picture_2">Picture 2:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Instructor.Picture_2, htmlAttributes: new { @class = "form-control", @type = "file", multiple = "multiple" })
                @Html.ValidationMessageFor(m => m.Instructor.Picture_2, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="control-label col-sm-2" for="Instructor.Picture_3">Picture 3:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Instructor.Picture_3, htmlAttributes: new { @class = "form-control", @type = "file", multiple = "multiple" })
                @Html.ValidationMessageFor(m => m.Instructor.Picture_3, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-sm-2">Majors: </label>
            <div class="col-sm-10" id="chkBoxListId">
                @{
                    int i = 0;
                    while (i < Model.MajorsList.Count())
                    {
                        <div class="custom-control custom-checkbox" style="float: left; width: 150px;">
                            <input type="checkbox" onchange="changedOnChkBox()" class="custom-control-input" id="@Model.MajorsList[i].Id" asp-for="@Model.MajorsList[i].SelectedMajor" />
                            <label for="@Model.MajorsList[i].Id" class="custom-control-label">@Model.MajorsList[i].Name</label>
                            @Html.TextBoxFor(m => m.MajorsList[i].Id, htmlAttributes: new { @class = "form-control", @type = "hidden" })
                            @Html.TextBoxFor(m => m.MajorsList[i].Name, htmlAttributes: new { @class = "form-control", @type = "hidden" })
                        </div>

                        i = i + 1;
                        if (i < Model.MajorsList.Count())
                        {
                            <div class="custom-control custom-checkbox" style="float: left; width: 150px;">
                                <input type="checkbox" onchange="changedOnChkBox()" class="custom-control-input" id="@Model.MajorsList[i].Id" asp-for="@Model.MajorsList[i].SelectedMajor" />
                                <label for="@Model.MajorsList[i].Id" class="custom-control-label">@Model.MajorsList[i].Name</label>
                                @Html.TextBoxFor(m => m.MajorsList[i].Id, htmlAttributes: new { @class = "form-control", @type = "hidden" })
                                @Html.TextBoxFor(m => m.MajorsList[i].Name, htmlAttributes: new { @class = "form-control", @type = "hidden" })
                            </div>
                        }

                        i = i + 1;
                        if (i < Model.MajorsList.Count())
                        {
                            <div class="custom-control custom-checkbox" style="float: left; width: 150px;">
                                <input type="checkbox" onchange="changedOnChkBox()" class="custom-control-input" id="@Model.MajorsList[i].Id" asp-for="@Model.MajorsList[i].SelectedMajor" />
                                <label for="@Model.MajorsList[i].Id" class="custom-control-label">@Model.MajorsList[i].Name</label>
                                @Html.TextBoxFor(m => m.MajorsList[i].Id, htmlAttributes: new { @class = "form-control", @type = "hidden" })
                                @Html.TextBoxFor(m => m.MajorsList[i].Name, htmlAttributes: new { @class = "form-control", @type = "hidden" })
                            </div>
                        }

                        <div class="custom-control custom-checkbox" style="clear: both;"></div>

                        i = i + 1;
                    }
                }

                <span id="chkboxListErrorId" class="text-danger">Please select at least one.</span>
            </div>

        </div>
        <br />
        <div class="form-group">
            <input type="submit" value="Update" class="btn btn-primary" />
            <a asp-action="Index" class="btn btn-success">Back to List</a>
        </div>
    }

</div>



@section Scripts {
    <script type="text/javascript">
        $(function () {



            $("#chkboxListErrorId").hide();
        });

        function changedOnChkBox() {
            var cnt = $("#chkBoxListId input:checked").length;
            if (cnt < 1) {
                $("#chkboxListErrorId").show();
            }
            else {
                $("#chkboxListErrorId").hide();

            }
        }

        function onValidation() {
            var cnt = $("#chkBoxListId input:checked").length;
            if (cnt < 1) {
                $("#chkboxListErrorId").show();

                return false;
            }
            else {
                $("#chkboxListErrorId").hide();

                return true;
            }
        }
    </script>


    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
